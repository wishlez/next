generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id          Int           @id @default(autoincrement())
    login       String        @unique @db.VarChar(64)
    name        String        @db.VarChar(64)
    password    String        @db.VarChar(64)
    Account     Account[]
    Tag         Tag[]
    Transaction Transaction[]
}

enum AccountTypes {
    Asset
    Expense
    Revenue
    Equity
    Liability
}

model AccountType {
    type    AccountTypes @id @unique
    Account Account[]
}

model Account {
    id                Int           @id @default(autoincrement())
    name              String        @db.VarChar(32)
    openingBalance    Decimal       @default(0) @db.Decimal(10, 2)
    maximumAmountOwed Decimal       @default(0) @db.Decimal(10, 2)
    builtIn           Boolean       @default(false)
    accountType       AccountTypes
    userId            Int
    AccountType       AccountType   @relation(fields: [accountType], references: [type], onDelete: Cascade, onUpdate: Cascade)
    User              User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    Outgoing          Transaction[] @relation("FromAccount")
    Incoming          Transaction[] @relation("ToAccount")

    @@unique([name, userId])
}

model Tag {
    id             Int              @id @default(autoincrement())
    name           String
    userId         Int
    User           User             @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    TransactionTag TransactionTag[]

    @@unique([name, userId])
}

model Transaction {
    id             Int              @id @default(autoincrement())
    description    String           @db.VarChar(256)
    amount         Decimal          @db.Decimal(10, 2)
    date           DateTime         @db.Date
    fromAccountId  Int
    toAccountId    Int
    userId         Int
    FromAccount    Account          @relation(name: "FromAccount", fields: [fromAccountId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    ToAccount      Account          @relation(name: "ToAccount", fields: [toAccountId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    User           User             @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    TransactionTag TransactionTag[]

    @@fulltext([description])
}

model TransactionTag {
    tagId         Int
    transactionId Int
    Tag           Tag         @relation(fields: [tagId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    Transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@id([tagId, transactionId])
}
